**---------------------------------------Assignment - 1---------------------------------------------------------------**

Q.1. Write a Python program to handle a ZeroDivisionError exception when dividing a number by zero. 

CODE:

def divide_numbers(dividend, divisor):
    try:
        result = dividend / divisor
        print("Result of division:", result)
    except ZeroDivisionError:
        print("Error: Division by zero is not allowed.")

# Example usage:
dividend = 10
divisor = 0

divide_numbers(dividend, divisor)

OUTPUT:
Error: Division by zero is not allowed.


**---------------------------------------Assignment - 2---------------------------------------------------------------**

Q.2. Write a Python program that prompts the user to input an integer and raises a ValueError exception if the input is not a valid integer. 


CODE:
def get_integer_input():
    try:
        # Prompt the user to input an integer
        num = int(input("Enter an integer: "))
        print("Input integer:", num)
    except ValueError:
        print("Error: Invalid input. Please enter a valid integer.")

# Example usage:
get_integer_input()


OUTPUT:
Enter an integer: abc
Error: Invalid input. Please enter a valid integer.



**---------------------------------------Assignment - 3---------------------------------------------------------------**

Q.3. Write a Python program that opens a file and handles a FileNotFoundError exception if the file does not exist. 


CODE:

def open_file(file_name):
    try:
        with open(file_name, 'r') as file:
            print("File contents:")
            print(file.read())
    except FileNotFoundError:
        print(f"Error: File '{file_name}' not found.")

# Example usage:
file_name = input("Enter the file name: ")
open_file(file_name)


OUTPUT:
Enter the file name: non_existent_file.txt
Error: File 'non_existent_file.txt' not found.




**---------------------------------------Assignment - 4---------------------------------------------------------------**

Q.4. Write a Python program that prompts the user to input two numbers and raises a TypeError exception if the inputs are not numerical


CODE:

def get_numerical_inputs():
    try:
        # Prompt the user to input two numbers
        num1 = float(input("Enter the first number: "))
        num2 = float(input("Enter the second number: "))
        print("Input numbers:", num1, "and", num2)
    except ValueError:
        print("Error: Invalid input. Please enter numerical values.")

# Example usage:
get_numerical_inputs()


OUTPUT:
Enter the first number: 10
Enter the second number: abc
Error: Invalid input. Please enter numerical values.

building a pgm to track students grades create a list called  student_grades cointain a grades of 5 students out of 100 calulate the and print the avg







